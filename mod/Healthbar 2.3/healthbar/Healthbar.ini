namespace = Healthbar

; -----------------------------------------------------------------------------
; Healthbar is disabled by default for performance.
; 
; Mod Developers must add "run = CommandList\Healthbar\Run" to one of the
; overrides to enable healthbar tracking, when a match is found. For example:
; 
; [TextureOverrideAnbyBodyBlend]
; hash = 137cbdbe
; run = CommandList\Healthbar\Run
; 
; Alternatively, add "run = CommandList\Healthbar\<Agent>" to a [Present]
; section to only track health when that agent is on-screen. For example:
; 
; [Present]
; run = CommandList\Healthbar\Anby
; -----------------------------------------------------------------------------
; run = CommandList\Healthbar\Run
[CommandListRun]
$NextIsActivated = 1

; run = CommandList\Healthbar\Buffer
; Only updates Resource\Healthbar\HealthBuffer.
; Used to pass current health to custom shaders without the heavy performance
; hit from the "store" command.
[CommandListBuffer]
$NextIsBuffer = 1

; Agent specific commands are defined elsewhere.

; run = CommandList\Healthbar\Anby
; run = CommandList\Healthbar\Billy
; run = CommandList\Healthbar\Nicole
; run = CommandList\Healthbar\Nekomata
; run = CommandList\Healthbar\Koleda
; run = CommandList\Healthbar\Ben
; run = CommandList\Healthbar\Grace
; run = CommandList\Healthbar\Anton
; run = CommandList\Healthbar\Lycaon
; run = CommandList\Healthbar\Ellen
; run = CommandList\Healthbar\Rina
; run = CommandList\Healthbar\Corin
; run = CommandList\Healthbar\Soldier11
; run = CommandList\Healthbar\ZhuYuan
; run = CommandList\Healthbar\Soukaku
; run = CommandList\Healthbar\Lucy
; run = CommandList\Healthbar\Lighter
; run = CommandList\Healthbar\Piper
; run = CommandList\Healthbar\Qingyi
; run = CommandList\Healthbar\Jane
; run = CommandList\Healthbar\Seth
; run = CommandList\Healthbar\Burnice
; run = CommandList\Healthbar\Caesar
; run = CommandList\Healthbar\TsukishiroYanagi
; run = CommandList\Healthbar\HoshimiMiyabi
; run = CommandList\Healthbar\AsabaHarumasa
; run = CommandList\Healthbar\Evelyn
; run = CommandList\Healthbar\AstraYao
; run = CommandList\Healthbar\Soldier0Anby
; run = CommandList\Healthbar\Pulchra
; run = CommandList\Healthbar\Trigger
; run = CommandList\Healthbar\Vivian
; run = CommandList\Healthbar\Hugo
; run = CommandList\Healthbar\PanYinhu
; run = CommandList\Healthbar\Yixuan
; run = CommandList\Healthbar\JuFufu
; run = CommandList\Healthbar\Yuzuha
; run = CommandList\Healthbar\Alice
; run = CommandList\Healthbar\Seed
; run = CommandList\Healthbar\Orphie
; run = CommandList\Healthbar\Lucia
; run = CommandList\Healthbar\Manato

; [LAST_START]
;; run = CommandList\Healthbar\[AGENT]
; [LAST_END]

[Constants]
; -----------------------------------------------------------------------------
; Config Variables
; -----------------------------------------------------------------------------
; Health values will update every 50 ms (25 ms avg. latency on health change).
global $HEALTH_UPDATE_INTERVAL = 0.050

; Health values will reset to 1.0 if not on-field within the last 30s.
global $HEALTH_RESET_DELAY = 30.000

; Disabled tracking shield health for performance. Set this to 1 to enable
; Shield tracking. Otherwise, large shields may incorrectly reduce health.
global $QUERY_SHIELD_HEALTH = 1

; -----------------------------------------------------------------------------
; Agent Health values
; -----------------------------------------------------------------------------
; Value ranges from 0.0 to 1.0.
; Access these variables by $\Healthbar\<Variable>

; Use "$\Healthbar\Health" for current on-field character's Health.
global $Health = 1

; Use "$\Healthbar\Anby" for Anby's Health
; Useful to prevent wrong Health values when character swapped mid-animation
; because the swapped out character may stay on-screen, in addition to the
; swapped in character, until the previous character's animation is finished.
global $Anby = 1
global $Billy = 1
global $Nicole = 1
global $Nekomata = 1
global $Koleda = 1
global $Ben = 1
global $Grace = 1
global $Anton = 1
global $Lycaon = 1
global $Ellen = 1
global $Rina = 1
global $Corin = 1
global $Soldier11 = 1
global $ZhuYuan = 1
global $Soukaku = 1
global $Lucy = 1
global $Lighter = 1
global $Piper = 1
global $Qingyi = 1
global $Jane = 1
global $Seth = 1
global $Burnice = 1
global $Caesar = 1
global $TsukishiroYanagi = 1
global $HoshimiMiyabi = 1
global $AsabaHarumasa = 1
global $Evelyn = 1
global $AstraYao = 1
global $Soldier0Anby = 1
global $Pulchra = 1
global $Trigger = 1
global $Vivian = 1
global $Hugo = 1
global $PanYinHu = 1
global $Yixuan = 1
global $JuFufu = 1
global $Yuzuha = 1
global $Alice = 1
global $Seed = 1
global $Orphie = 1
global $Lucia = 1
global $Manato = 1

; [LAST_START]
;global $[AGENT] = 1
; [LAST_END]

; -----------------------------------------------------------------------------
; Agent on-screen check
; -----------------------------------------------------------------------------
; Variables to filter against UI portrait check to prevent UI animations which
; mess with draw call order from applying current health to wrong character.

global $IsAnby = 0
global $IsBilly = 0
global $IsNicole = 0
global $IsNekomata = 0
global $IsKoleda = 0
global $IsBen = 0
global $IsGrace = 0
global $IsAnton = 0
global $IsLycaon = 0
global $IsEllen = 0
global $IsRina = 0
global $IsCorin = 0
global $IsSoldier11 = 0
global $IsZhuYuan = 0
global $IsSoukaku = 0
global $IsLucy = 0
global $IsLighter = 0
global $IsPiper = 0
global $IsQingyi = 0
global $IsJane = 0
global $IsSeth = 0
global $IsBurnice = 0
global $IsCaesar = 0
global $IsTsukishiroYanagi = 0
global $IsHoshimiMiyabi = 0
global $IsAsabaHarumasa = 0
global $IsEvelyn = 0
global $IsAstraYao = 0
global $IsSoldier0Anby = 0
global $IsPulchra = 0
global $IsTrigger = 0
global $IsVivian = 0
global $IsHugo = 0
global $IsPanYinHu = 0
global $IsYixuan = 0
global $IsJuFufu = 0
global $IsYuzuha = 0
global $IsAlice = 0
global $IsSeed = 0
global $IsOrphie = 0
global $IsLucia = 0
global $IsManato = 0

; [LAST_START]
;global $Is[AGENT] = 0
; [LAST_END]

; -----------------------------------------------------------------------------
; Agent on-field timestamp
; -----------------------------------------------------------------------------
; Timestamps used to hold last known health value for $HEALTH_RESET_DELAY

global $TimeHealth = 0
; global $TimeAgent = 0

global $TimeAnby = 0
global $TimeBilly = 0
global $TimeNicole = 0
global $TimeNekomata = 0
global $TimeKoleda = 0
global $TimeBen = 0
global $TimeGrace = 0
global $TimeAnton = 0
global $TimeLycaon = 0
global $TimeEllen = 0
global $TimeRina = 0
global $TimeCorin = 0
global $TimeSoldier11 = 0
global $TimeZhuYuan = 0
global $TimeSoukaku = 0
global $TimeLucy = 0
global $TimeLighter = 0
global $TimePiper = 0
global $TimeQingyi = 0
global $TimeJane = 0
global $TimeSeth = 0
global $TimeBurnice = 0
global $TimeCaesar = 0
global $TimeTsukishiroYanagi = 0
global $TimeHoshimiMiyabi = 0
global $TimeAsabaHarumasa = 0
global $TimeEvelyn = 0
global $TimeAstraYao = 0
global $TimeSoldier0Anby = 0
global $TimePulchra = 0
global $TimeTrigger = 0
global $TimeVivian = 0
global $TimeHugo = 0
global $TimePanYinHu = 0
global $TimeYixuan = 0
global $TimeJuFufu = 0
global $TimeYuzuha = 0
global $TimeAlice = 0
global $TimeSeed = 0
global $TimeOrphie = 0
global $TimeLucia = 0
global $TimeManato = 0

; [LAST_START]
;global $Time[AGENT] = 0
; [LAST_END]

; -----------------------------------------------------------------------------
; Implementation Variables
; -----------------------------------------------------------------------------
; Performance optimizations
; Track party count to only update on-field agent's health value.
global $PartyCount = 0
global $PartyCountActive = 0
; global $PortraitCount = 0
; global $PortraitOrder = 0

; Draw call order often draws UI late and order can change with UI animations,
; so the above variables have one-frame-lag to improve reliability between UI
; and Character mods.
global $NextHealth = 1
global $NextShield = 0
global $NextPartyCount = 0
; global $NextAgent = 0
; global $NextPortraitCount = 0
; global $NextPortraitOrder = 0

; Track combat UI to avoid wrong health updates while UI is hidden or applying
; damaged skins within 30s of leaving combat.
global $IsCombat = 0
global $NextIsCombat = 0

; "Store" command is very innefficient and will freeze the current frame until
; completion. To reduce performance impact, we want to update in set intervals,
; not every frame.
global $IsActivated = 0
global $NextIsActivated = 0

; Only updates Resource\Healthbar\HealthBuffer.
; Used to pass current health to custom shaders without the heavy performance
; hit from the "store" command
global $IsBuffer = 0
global $NextIsBuffer = 0

global $IsUpdate = 0
global $NextIsUpdate = 0
global $NextUpdateTime = 0.05

; Resource\Healthbar\HealthBuffer
; Holds the health value until we know to which agent it belongs.
[ResourceHealthBuffer]

[Present]
; -----------------------------------------------------------------------------
; Present
; -----------------------------------------------------------------------------
; Assign new values and clear next values

; Update health value

; Version 2.0 broke portrait handling, so this no longer works. Now agent
; health will only update when they're the only agent on camera.

; if $IsUpdate && ($NextAgent || $PartyCountActive == 1) && $NextPortraitOrder == $PortraitOrder
if $IsUpdate && $PartyCountActive == 1
    
    store = $NextHealth, ref ResourceHealthBuffer, 45

    if $QUERY_SHIELD_HEALTH
        store = $NextShield, ref ResourceHealthBuffer, 46
        if ($NextHealth + $NextShield > 0.992)
            $NextHealth = 1
        endif
    endif

    ; ; If multiple characters are on-screen, delay update 250 ms because
    ; ; character swap UI animation updates healthbar first before updating
    ; ; portrait positions.
    ; if $PartyCountActive > 1 && $Health != $NextHealth
    ;     $Agent = 0
    ;     $TimeAgent = time + 0.500
    ; ; Burnice and Lighter always have portrait as first draw call regardless
    ; ; to party order, so we have to wait for them to be alone to accurately
    ; ; assign health value to the correct agent.
    ; else if $PartyCountActive > 1 && ($IsBurnice || $IsLighter)
    ;     $Agent = 0
    ;     $TimeAgent = 0 
    ; else if $TimeAgent == 0 || $TimeAgent < time
    ;     $Agent = $NextAgent
    ;     $TimeAgent = 0
    ; endif

    $Health = $NextHealth
    $TimeHealth = time + $HEALTH_RESET_DELAY
else if $TimeHealth > 0 && $TimeHealth < time
    $Health = 1
    $TimeHealth = 0
endif

; queue next health update
if $NextUpdateTime < time
    $NextIsUpdate = 1
endif

; carry some variables into next frame
post $IsActivated = $NextIsActivated
post $IsBuffer = $NextIsBuffer
post $IsCombat = $NextIsCombat
post $PartyCount = $NextPartyCount
; post $PortraitCount = $NextPortraitCount
; post $PortraitOrder = $NextPortraitOrder

; reset other variables
post $NextIsActivated = 0
post $NextIsBuffer = 0
post $NextIsCombat = 0
post $NextHealth = 1
post $NextShield = 0
post $NextPartyCount = 0
; post $NextAgent = 0
; post $NextPortraitCount = 0
; post $NextPortraitOrder = 0

post $PartyCountActive = 0
post $IsUpdate = 0

; -----------------------------------------------------------------------------
; Shader Overrides
; -----------------------------------------------------------------------------
; Hook UI draw calls to update next variables

; Pixel Shader for Combat UI that draws Agents' grey energy (when energy is
; below EX Special threshold)
[ShaderOverride Combat LowEnergyPS]
hash = 7920a83a17440bf7
allow_duplicate_hash=overrule
$NextPartyCount = $NextPartyCount + 1
$NextIsCombat = 1

; Pixel Shader for Combat UI that draws Agents' red/blue energy (when energy is
; above EX Special threshold)
[ShaderOverride Combat HighEnergyPS]
hash = 6d76cd392a3b7689
allow_duplicate_hash=overrule
$NextPartyCount = $NextPartyCount + 1
$NextIsCombat = 1

; Pixel Shader for Agent and Enemy green Healthbars
[ShaderOverride HealthbarPS]
hash = dce9c76d7f184caf
allow_duplicate_hash=overrule
if $costume_mods && ($IsActivated || $IsBuffer) && $NextIsUpdate && $IsCombat && ps-t0 == 2
    $NextIsUpdate = 0
    $NextUpdateTime = time + $HEALTH_UPDATE_INTERVAL
    ResourceHealthBuffer = copy ps-cb0
    if $IsActivated
        $IsUpdate = 1
    endif
endif

; -----------------------------------------------------------------------------
; Texture Overrides
; -----------------------------------------------------------------------------
; Add filter index to healthbar texture
[TextureOverride HealthBarTex]
hash = 6c54ef21
match_index_count = 54
match_priority = 999
filter_index = 2

; This should prevents mod breaking when texture hash changes in a new version.
; But this may cause compatability issues with other UI mods.
[TextureOverride HealthBarTex Fuzzy]
match_type = Texture2D
match_format = DXGI_FORMAT_BC3_UNORM_SRGB
match_width = 1024
match_height = 1024
match_mips = 1
match_index_count = 54
match_priority = 999
filter_index = 2

; UI Recolor compatability patch - https://gamebanana.com/mods/532306
; UI Recolor Dev used the correct format this time, but wrong mip count
[TextureOverride HealthBarTex UI Recolor Fuzzy]
match_type = Texture2D
match_format = DXGI_FORMAT_BC3_UNORM_SRGB
match_width = 1024
match_height = 1024
match_mips = 11
match_index_count = 54
match_priority = 999
filter_index = 2

; Get $NextAgent from Combat UI rendering character-swap face portraits. 
; Usually want last portrait draw call, but some animations change this.

; Filter based on character presence by body blend vertex buffer, which is
; unique for each skin, but does not conflict with VRAM limitations (1k vs 2k
; textures) or doppelganger enemies (Jane Doe, Pulchra, Hugo, etc.).

; MARK: Anby
[CommandListAnby]
if $IsAnby
    $NextIsActivated = 1
endif

[TextureOverride Anby Body Blend]
hash = 137cbdbe
match_priority = -999
if !$IsAnby
    $IsAnby = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsAnby && $PartyCountActive == 1
    $Anby = $Health
    $TimeAnby = $TimeHealth
else if $TimeAnby > 0 && $TimeAnby < time
    $Anby = 1
    $TimeAnby = 0
endif
post $IsAnby = 0


; MARK: Billy
[CommandListBilly]
if $IsBilly
    $NextIsActivated = 1
endif

[TextureOverride Billy Body Blend]
hash = 771fdae9
match_priority = -999
if !$IsBilly
    $IsBilly = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsBilly && $PartyCountActive == 1
    $Billy = $Health
    $TimeBilly = $TimeHealth
else if $TimeBilly > 0 && $TimeBilly < time
    $Billy = 1
    $TimeBilly = 0
endif
post $IsBilly = 0


; MARK: Nicole
[CommandListNicole]
if $IsNicole
    $NextIsActivated = 1
endif

[TextureOverride Nicole Body Blend]
hash = 7ecda89f
match_priority = -999
if !$IsNicole
    $IsNicole = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride Nicole Skin Body Blend]
hash = f9fb2aa0
match_priority = -999
if !$IsNicole
    $IsNicole = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsNicole && $PartyCountActive == 1
    $Nicole = $Health
    $TimeNicole = $TimeHealth
else if $TimeNicole > 0 && $TimeNicole < time
    $Nicole = 1
    $TimeNicole = 0
endif
post $IsNicole = 0


; MARK: Nekomata
[CommandListNekomata]
if $IsNekomata
    $NextIsActivated = 1
endif

[TextureOverride Nekomata Body Blend]
hash = d27d0e6b
match_priority = -999
if !$IsNekomata
    $IsNekomata = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsNekomata && $PartyCountActive == 1
    $Nekomata = $Health
    $TimeNekomata = $TimeHealth
else if $TimeNekomata > 0 && $TimeNekomata < time
    $Nekomata = 1
    $TimeNekomata = 0
endif
post $IsNekomata = 0


; MARK: Koleda
[CommandListKoleda]
if $IsKoleda
    $NextIsActivated = 1
endif

[TextureOverride Koleda Body Blend]
hash = ad8e1d95
match_priority = -999
if !$IsKoleda
    $IsKoleda = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsKoleda && $PartyCountActive == 1
    $Koleda = $Health
    $TimeKoleda = $TimeHealth
else if $TimeKoleda > 0 && $TimeKoleda < time
    $Koleda = 1
    $TimeKoleda = 0
endif
post $IsKoleda = 0


; MARK: Ben
[CommandListBen]
if $IsBen
    $NextIsActivated = 1
endif

[TextureOverride Ben Body Blend]
hash = 21dd67a7
; hash = a2f79d33
match_priority = -999
if !$IsBen
    $IsBen = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsBen && $PartyCountActive == 1
    $Ben = $Health
    $TimeBen = $TimeHealth
else if $TimeBen > 0 && $TimeBen < time
    $Ben = 1
    $TimeBen = 0
endif
post $IsBen = 0


; MARK: Grace
[CommandListGrace]
if $IsGrace
    $NextIsActivated = 1
endif

[TextureOverride Grace Body Blend]
hash = 3b80154c
match_priority = -999
if !$IsGrace
    $IsGrace = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsGrace && $PartyCountActive == 1
    $Grace = $Health
    $TimeGrace = $TimeHealth
else if $TimeGrace > 0 && $TimeGrace < time
    $Grace = 1
    $TimeGrace = 0
endif
post $IsGrace = 0


; MARK: Anton
[CommandListAnton]
if $IsAnton
    $NextIsActivated = 1
endif

[TextureOverride Anton Body Blend]
hash = 76bc385f
match_priority = -999
if !$IsAnton
    $IsAnton = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsAnton && $PartyCountActive == 1
    $Anton = $Health
    $TimeAnton = $TimeHealth
else if $TimeAnton > 0 && $TimeAnton < time
    $Anton = 1
    $TimeAnton = 0
endif
post $IsAnton = 0


; MARK: Lycaon
[CommandListLycaon]
if $IsLycaon
    $NextIsActivated = 1
endif

[TextureOverride Lycaon Body Blend]
hash = f2d1a929
match_priority = -999
if !$IsLycaon
    $IsLycaon = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsLycaon && $PartyCountActive == 1
    $Lycaon = $Health
    $TimeLycaon = $TimeHealth
else if $TimeLycaon > 0 && $TimeLycaon < time
    $Lycaon = 1
    $TimeLycaon = 0
endif
post $IsLycaon = 0


; MARK: Ellen
[CommandListEllen]
if $IsEllen
    $NextIsActivated = 1
endif

[TextureOverride Ellen Body Blend]
hash = ed9cb852
match_priority = -999
if !$IsEllen
    $IsEllen = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride Ellen Skin Body Blend]
hash = f6f9cc24
match_priority = -999
if !$IsEllen
    $IsEllen = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsEllen && $PartyCountActive == 1
    $Ellen = $Health
    $TimeEllen = $TimeHealth
else if $TimeEllen > 0 && $TimeEllen < time
    $Ellen = 1
    $TimeEllen = 0
endif
post $IsEllen = 0


; MARK: Rina
[CommandListRina]
if $IsRina
    $NextIsActivated = 1
endif

[TextureOverride Rina Body Blend]
hash = 17471aea
match_priority = -999
if !$IsRina
    $IsRina = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsRina && $PartyCountActive == 1
    $Rina = $Health
    $TimeRina = $TimeHealth
else if $TimeRina > 0 && $TimeRina < time
    $Rina = 1
    $TimeRina = 0
endif
post $IsRina = 0


; MARK: Corin
[CommandListCorin]
if $IsCorin
    $NextIsActivated = 1
endif

[TextureOverride Corin Body Blend]
hash = aa71e514
match_priority = -999
if !$IsCorin
    $IsCorin = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsCorin && $PartyCountActive == 1
    $Corin = $Health
    $TimeCorin = $TimeHealth
else if $TimeCorin > 0 && $TimeCorin < time
    $Corin = 1
    $TimeCorin = 0
endif
post $IsCorin = 0


; MARK: Soldier11
[CommandListSoldier11]
if $IsSoldier11
    $NextIsActivated = 1
endif

[TextureOverride Soldier11 Body Blend]
hash = 2cb26d03
match_priority = -999
if !$IsSoldier11
    $IsSoldier11 = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsSoldier11 && $PartyCountActive == 1
    $Soldier11 = $Health
    $TimeSoldier11 = $TimeHealth
else if $TimeSoldier11 > 0 && $TimeSoldier11 < time
    $Soldier11 = 1
    $TimeSoldier11 = 0
endif
post $IsSoldier11 = 0


; MARK: ZhuYuan
[CommandListZhuYuan]
if $IsZhuYuan
    $NextIsActivated = 1
endif

[TextureOverride ZhuYuan Body Blend]
hash = 01e0c8d9
match_priority = -999
if !$IsZhuYuan
    $IsZhuYuan = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsZhuYuan && $PartyCountActive == 1
    $ZhuYuan = $Health
    $TimeZhuYuan = $TimeHealth
else if $TimeZhuYuan > 0 && $TimeZhuYuan < time
    $ZhuYuan = 1
    $TimeZhuYuan = 0
endif
post $IsZhuYuan = 0


; MARK: Soukaku
[CommandListSoukaku]
if $IsSoukaku
    $NextIsActivated = 1
endif

[TextureOverride Soukaku Body Blend]
hash = dbbbafef
match_priority = -999
if !$IsSoukaku
    $IsSoukaku = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsSoukaku && $PartyCountActive == 1
    $Soukaku = $Health
    $TimeSoukaku = $TimeHealth
else if $TimeSoukaku > 0 && $TimeSoukaku < time
    $Soukaku = 1
    $TimeSoukaku = 0
endif
post $IsSoukaku = 0


; MARK: Lucy
[CommandListLucy]
if $IsLucy
    $NextIsActivated = 1
endif

[TextureOverride Lucy Body Blend]
hash = 66948a0f
match_priority = -999
if !$IsLucy
    $IsLucy = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsLucy && $PartyCountActive == 1
    $Lucy = $Health
    $TimeLucy = $TimeHealth
else if $TimeLucy > 0 && $TimeLucy < time
    $Lucy = 1
    $TimeLucy = 0
endif
post $IsLucy = 0


; MARK: Piper
[CommandListPiper]
if $IsPiper
    $NextIsActivated = 1
endif

[TextureOverride Piper Body Blend]
hash = 3d329807
match_priority = -999
if !$IsPiper
    $IsPiper = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsPiper && $PartyCountActive == 1
    $Piper = $Health
    $TimePiper = $TimeHealth
else if $TimePiper > 0 && $TimePiper < time
    $Piper = 1
    $TimePiper = 0
endif
post $IsPiper = 0


; MARK: Qingyi
[CommandListQingyi]
if $IsQingyi
    $NextIsActivated = 1
endif

[TextureOverride Qingyi Body Blend]
hash = 88a6f633
match_priority = -999
if !$IsQingyi
    $IsQingyi = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsQingyi && $PartyCountActive == 1
    $Qingyi = $Health
    $TimeQingyi = $TimeHealth
else if $TimeQingyi > 0 && $TimeQingyi < time
    $Qingyi = 1
    $TimeQingyi = 0
endif
post $IsQingyi = 0


; MARK: Jane
[CommandListJane]
if $IsJane
    $NextIsActivated = 1
endif

[TextureOverride Jane Body Blend]
hash = e27f398e
match_priority = -999
if !$IsJane
    $IsJane = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsJane && $PartyCountActive == 1
    $Jane = $Health
    $TimeJane = $TimeHealth
else if $TimeJane > 0 && $TimeJane < time
    $Jane = 1
    $TimeJane = 0
endif
post $IsJane = 0


; MARK: Seth
[CommandListSeth]
if $IsSeth
    $NextIsActivated = 1
endif

[TextureOverride Seth Body Blend]
hash = b758d72f
match_priority = -999
if !$IsSeth
    $IsSeth = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsSeth && $PartyCountActive == 1
    $Seth = $Health
    $TimeSeth = $TimeHealth
else if $TimeSeth > 0 && $TimeSeth < time
    $Seth = 1
    $TimeSeth = 0
endif
post $IsSeth = 0


; MARK: Caesar
[CommandListCaesar]
if $IsCaesar
    $NextIsActivated = 1
endif

[TextureOverride Caesar Body Blend]
hash = 8a3da083
match_priority = -999
if !$IsCaesar
    $IsCaesar = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsCaesar && $PartyCountActive == 1
    $Caesar = $Health
    $TimeCaesar = $TimeHealth
else if $TimeCaesar > 0 && $TimeCaesar < time
    $Caesar = 1
    $TimeCaesar = 0
endif
post $IsCaesar = 0


; MARK: Burnice
[CommandListBurnice]
if $IsBurnice
    $NextIsActivated = 1
endif

[TextureOverride Burnice Body Blend]
hash = c705bf55
match_priority = -999
if !$IsBurnice
    $IsBurnice = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsBurnice && $PartyCountActive == 1
    $Burnice = $Health
    $TimeBurnice = $TimeHealth
else if $TimeBurnice > 0 && $TimeBurnice < time
    $Burnice = 1
    $TimeBurnice = 0
endif
post $IsBurnice = 0


; MARK: TsukishiroYanagi
[CommandListTsukishiroYanagi]
if $IsTsukishiroYanagi
    $NextIsActivated = 1
endif

[TextureOverride TsukishiroYanagi Body Blend]
hash = fd363c76
match_priority = -999
if !$IsTsukishiroYanagi
    $IsTsukishiroYanagi = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsTsukishiroYanagi && $PartyCountActive == 1
    $TsukishiroYanagi = $Health
    $TimeTsukishiroYanagi = $TimeHealth
else if $TimeTsukishiroYanagi > 0 && $TimeTsukishiroYanagi < time
    $TsukishiroYanagi = 1
    $TimeTsukishiroYanagi = 0
endif
post $IsTsukishiroYanagi = 0


; MARK: Lighter
[CommandListLighter]
if $IsLighter
    $NextIsActivated = 1
endif

[TextureOverride Lighter Body Blend]
hash = da216bb6
match_priority = -999
if !$IsLighter
    $IsLighter = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsLighter && $PartyCountActive == 1
    $Lighter = $Health
    $TimeLighter = $TimeHealth
else if $TimeLighter > 0 && $TimeLighter < time
    $Lighter = 1
    $TimeLighter = 0
endif
post $IsLighter = 0


; MARK: HoshimiMiyabi
[CommandListHoshimiMiyabi]
if $IsHoshimiMiyabi
    $NextIsActivated = 1
endif

[TextureOverride HoshimiMiyabi Body Blend]
hash = 9a4227c8
match_priority = -999
if !$IsHoshimiMiyabi
    $IsHoshimiMiyabi = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsHoshimiMiyabi && $PartyCountActive == 1
    $HoshimiMiyabi = $Health
    $TimeHoshimiMiyabi = $TimeHealth
else if $TimeHoshimiMiyabi > 0 && $TimeHoshimiMiyabi < time
    $HoshimiMiyabi = 1
    $TimeHoshimiMiyabi = 0
endif
post $IsHoshimiMiyabi = 0


; MARK: AsabaHarumasa
[CommandListAsabaHarumasa]
if $IsAsabaHarumasa
    $NextIsActivated = 1
endif

[TextureOverride AsabaHarumasa Body Blend]
hash = 347a0e9d
match_priority = -999
if !$IsAsabaHarumasa
    $IsAsabaHarumasa = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsAsabaHarumasa && $PartyCountActive == 1
    $AsabaHarumasa = $Health
    $TimeAsabaHarumasa = $TimeHealth
else if $TimeAsabaHarumasa > 0 && $TimeAsabaHarumasa < time
    $AsabaHarumasa = 1
    $TimeAsabaHarumasa = 0
endif
post $IsAsabaHarumasa = 0


; MARK: Evelyn
[CommandListEvelyn]
if $IsEvelyn
    $NextIsActivated = 1
endif

[TextureOverride Evelyn Body Blend]
hash = 5ea06832
match_priority = -999
if !$IsEvelyn
    $IsEvelyn = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsEvelyn && $PartyCountActive == 1
    $Evelyn = $Health
    $TimeEvelyn = $TimeHealth
else if $TimeEvelyn > 0 && $TimeEvelyn < time
    $Evelyn = 1
    $TimeEvelyn = 0
endif
post $IsEvelyn = 0


; MARK: AstraYao
[CommandListAstraYao]
if $IsAstraYao
    $NextIsActivated = 1
endif

[TextureOverride AstraYao Body Blend]
hash = 9d35c352
match_priority = -999
if !$IsAstraYao
    $IsAstraYao = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride AstraYao Skin Body Blend]
hash = b72fadfc
match_priority = -999
if !$IsAstraYao
    $IsAstraYao = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsAstraYao && $PartyCountActive == 1
    $AstraYao = $Health
    $TimeAstraYao = $TimeHealth
else if $TimeAstraYao > 0 && $TimeAstraYao < time
    $AstraYao = 1
    $TimeAstraYao = 0
endif
post $IsAstraYao = 0


; MARK: Soldier0Anby
[CommandListSoldier0Anby]
if $IsSoldier0Anby
    $NextIsActivated = 1
endif

[TextureOverride Soldier0Anby Body Blend]
hash = d4ff3f35
match_priority = -999
if !$IsSoldier0Anby
    $IsSoldier0Anby = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsSoldier0Anby && $PartyCountActive == 1
    $Soldier0Anby = $Health
    $TimeSoldier0Anby = $TimeHealth
else if $TimeSoldier0Anby > 0 && $TimeSoldier0Anby < time
    $Soldier0Anby = 1
    $TimeSoldier0Anby = 0
endif
post $IsSoldier0Anby = 0


; MARK: Trigger
[CommandListTrigger]
if $IsTrigger
    $NextIsActivated = 1
endif

[TextureOverride Trigger Body Blend]
hash = e31a3b5f
match_priority = -999
if !$IsTrigger
    $IsTrigger = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsTrigger && $PartyCountActive == 1
    $Trigger = $Health
    $TimeTrigger = $TimeHealth
else if $TimeTrigger > 0 && $TimeTrigger < time
    $Trigger = 1
    $TimeTrigger = 0
endif
post $IsTrigger = 0


; MARK: Pulchra
[CommandListPulchra]
if $IsPulchra
    $NextIsActivated = 1
endif

[TextureOverride Pulchra Body Blend]
hash = 9381fa0b
match_priority = -999
if !$IsPulchra
    $IsPulchra = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsPulchra && $PartyCountActive == 1
    $Pulchra = $Health
    $TimePulchra = $TimeHealth
else if $TimePulchra > 0 && $TimePulchra < time
    $Pulchra = 1
    $TimePulchra = 0
endif
post $IsPulchra = 0


; MARK: Vivian
[CommandListVivian]
if $IsVivian
    $NextIsActivated = 1
endif

[TextureOverride Vivian Body Blend]
hash = e7122fe8
match_priority = -999
if !$IsVivian
    $IsVivian = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsVivian && $PartyCountActive == 1
    $Vivian = $Health
    $TimeVivian = $TimeHealth
else if $TimeVivian > 0 && $TimeVivian < time
    $Vivian = 1
    $TimeVivian = 0
endif
post $IsVivian = 0


; MARK: Hugo
[CommandListHugo]
if $IsHugo
    $NextIsActivated = 1
endif

[TextureOverride Hugo Body Blend]
hash = 757285ba
match_priority = -999
if !$IsHugo
    $IsHugo = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsHugo && $PartyCountActive == 1
    $Hugo = $Health
    $TimeHugo = $TimeHealth
else if $TimeHugo > 0 && $TimeHugo < time
    $Hugo = 1
    $TimeHugo = 0
endif
post $IsHugo = 0


; MARK: PanYinhu
[CommandListPanYinhu]
if $IsPanYinhu
    $NextIsActivated = 1
endif

[TextureOverride PanYinhu Body Blend]
hash = 4727992f
match_priority = -999
if !$IsPanYinhu
    $IsPanYinhu = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsPanYinhu && $PartyCountActive == 1
    $PanYinhu = $Health
    $TimePanYinhu = $TimeHealth
else if $TimePanYinhu > 0 && $TimePanYinhu < time
    $PanYinhu = 1
    $TimePanYinhu = 0
endif
post $IsPanYinhu = 0


; MARK: Yixuan
[CommandListYixuan]
if $IsYixuan
    $NextIsActivated = 1
endif

[TextureOverride Yixuan Body Blend]
hash = 55638d51
match_priority = -999
if !$IsYixuan
    $IsYixuan = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride YiXuan Skin Body Blend]
hash = b5c70816
match_priority = -999
if !$IsYiXuan
    $IsYiXuan = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsYixuan && $PartyCountActive == 1
    $Yixuan = $Health
    $TimeYixuan = $TimeHealth
else if $TimeYixuan > 0 && $TimeYixuan < time
    $Yixuan = 1
    $TimeYixuan = 0
endif
post $IsYixuan = 0


; MARK: JuFufu
[CommandListJuFufu]
if $IsJuFufu
    $NextIsActivated = 1
endif

[TextureOverride JuFufu Body Blend]
hash = c06c0417
match_priority = -999
if !$IsJuFufu
    $IsJuFufu = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsJuFufu && $PartyCountActive == 1
    $JuFufu = $Health
    $TimeJuFufu = $TimeHealth
else if $TimeJuFufu > 0 && $TimeJuFufu < time
    $JuFufu = 1
    $TimeJuFufu = 0
endif
post $IsJuFufu = 0


; MARK: Yuzuha
[CommandListYuzuha]
if $IsYuzuha
    $NextIsActivated = 1
endif

[TextureOverride Yuzuha Body Blend]
hash = 6fe5c40e
match_priority = -999
if !$IsYuzuha
    $IsYuzuha = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride Yuzuha Skin Body Blend]
hash = 523cf99d
match_priority = -999
if !$IsYuzuha
    $IsYuzuha = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsYuzuha && $PartyCountActive == 1
    $Yuzuha = $Health
    $TimeYuzuha = $TimeHealth
else if $TimeYuzuha > 0 && $TimeYuzuha < time
    $Yuzuha = 1
    $TimeYuzuha = 0
endif
post $IsYuzuha = 0


; MARK: Alice
[CommandListAlice]
if $IsAlice
    $NextIsActivated = 1
endif

[TextureOverride Alice Body Blend]
hash = 15935e48
match_priority = -999
if !$IsAlice
    $IsAlice = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[TextureOverride Alice Skin Body Blend]
hash = 7dc3bf5b
match_priority = -999
if !$IsAlice
    $IsAlice = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsAlice && $PartyCountActive == 1
    $Alice = $Health
    $TimeAlice = $TimeHealth
else if $TimeAlice > 0 && $TimeAlice < time
    $Alice = 1
    $TimeAlice = 0
endif
post $IsAlice = 0


; MARK: Seed
[CommandListSeed]
if $IsSeed
    $NextIsActivated = 1
endif

[TextureOverride Seed Body Blend]
hash = 5b3d022f
match_priority = -999
if !$IsSeed
    $IsSeed = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsSeed && $PartyCountActive == 1
    $Seed = $Health
    $TimeSeed = $TimeHealth
else if $TimeSeed > 0 && $TimeSeed < time
    $Seed = 1
    $TimeSeed = 0
endif
post $IsSeed = 0

; MARK: Orphie
[CommandListOrphie]
if $IsOrphie
    $NextIsActivated = 1
endif

[TextureOverride Orphie Body Blend]
hash = b823fb44
match_priority = -999
if !$IsOrphie
    $IsOrphie = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsOrphie && $PartyCountActive == 1
    $Orphie = $Health
    $TimeOrphie = $TimeHealth
else if $TimeOrphie > 0 && $TimeOrphie < time
    $Orphie = 1
    $TimeOrphie = 0
endif
post $IsOrphie = 0

; MARK: Manato
[CommandListManato]
if $IsManato
    $NextIsActivated = 1
endif

[TextureOverride Manato Body Blend]
hash = 91048d22
match_priority = -999
if !$IsManato
    $IsManato = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsManato && $PartyCountActive == 1
    $Manato = $Health
    $TimeManato = $TimeHealth
else if $TimeManato > 0 && $TimeManato < time
    $Manato = 1
    $TimeManato = 0
endif
post $IsManato = 0

; MARK: Lucia
[CommandListLucia]
if $IsLucia
    $NextIsActivated = 1
endif

[TextureOverride Lucia Body Blend]
hash = 3f4f9fa9
match_priority = -999
if !$IsLucia
    $IsLucia = 1
    $PartyCountActive = $PartyCountActive + 1
endif

[Present]
if $IsUpdate && $IsLucia && $PartyCountActive == 1
    $Lucia = $Health
    $TimeLucia = $TimeHealth
else if $TimeLucia > 0 && $TimeLucia < time
    $Lucia = 1
    $TimeLucia = 0
endif
post $IsLucia = 0


; [LAST_START]
;; MARK: [AGENT]
;[CommandList[AGENT]]
;if $Is[AGENT]
;    $NextIsActivated = 1
;endif
;
;[TextureOverride [AGENT] Body Blend]
;hash = [HASH]
;match_priority = -999
;if !$Is[AGENT]
;    $Is[AGENT] = 1
;    $PartyCountActive = $PartyCountActive + 1
;endif
;
;[Present]
;if $IsUpdate && $Is[AGENT] && $PartyCountActive == 1
;    $[AGENT] = $Health
;    $Time[AGENT] = $TimeHealth
;else if $Time[AGENT] > 0 && $Time[AGENT] < time
;    $[AGENT] = 1
;    $Time[AGENT] = 0
;endif
;post $Is[AGENT] = 0
;
; [LAST_END]
